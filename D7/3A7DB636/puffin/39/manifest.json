{"cyber-dojo.sh":"chmod +x *.sh\n./test_*.sh\ncat /etc/passwd","output":"test_pwd_to_print_current_working_dir\ntest_cd_to_change_directory\ntest_ls_to_list_contents_of_current_dir\ntest_ls_dir_to_list_contents_of_given_dir\ntest_dot_means_the_current_dir\ntest_dot_dot_means_the_parent_dir\ntest_mkdir_makes_a_dir_and_rmdir_removes_an_empty_dir\ntest_mkdir_p_makes_a_dir_and_intermediate_dirs\ntest_rm_removes_a_file\ntest_rm_rf_recursively_forces_dir_removal\ntest_cp_copies_a_file\ntest_mv_moves_a_file\ntest_finding_a_file_by_name\ntest_finding_a_file_by_content\n\n\nRan 14 tests.\n\nOK\nroot:x:0:0:root:/root:/bin/ash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\nsync:x:5:0:sync:/sbin:/bin/sync\nshutdown:x:6:0:shutdown:/sbin:/sbin/shutdown\nhalt:x:7:0:halt:/sbin:/sbin/halt\nmail:x:8:12:mail:/var/spool/mail:/sbin/nologin\nnews:x:9:13:news:/usr/lib/news:/sbin/nologin\nuucp:x:10:14:uucp:/var/spool/uucppublic:/sbin/nologin\noperator:x:11:0:operator:/root:/bin/sh\nman:x:13:15:man:/usr/man:/sbin/nologin\npostmaster:x:14:12:postmaster:/var/spool/mail:/sbin/nologin\ncron:x:16:16:cron:/var/spool/cron:/sbin/nologin\nftp:x:21:21::/var/lib/ftp:/sbin/nologin\nsshd:x:22:22:sshd:/dev/null:/sbin/nologin\nat:x:25:25:at:/var/spool/cron/atjobs:/sbin/nologin\nsquid:x:31:31:Squid:/var/cache/squid:/sbin/nologin\nxfs:x:33:33:X Font Server:/etc/X11/fs:/sbin/nologin\ngames:x:35:35:games:/usr/games:/sbin/nologin\npostgres:x:70:70::/var/lib/postgresql:/bin/sh\ncyrus:x:85:12::/usr/cyrus:/sbin/nologin\nvpopmail:x:89:89::/var/vpopmail:/sbin/nologin\nntp:x:123:123:NTP:/var/empty:/sbin/nologin\nsmmsp:x:209:209:smmsp:/var/spool/mqueue:/sbin/nologin\nguest:x:405:100:guest:/dev/null:/sbin/nologin\nnobody:x:65534:65534:nobody:/:/sbin/nologin\npuffin:x:40040:5000:Linux User,,,:/home/puffin:/bin/sh\nfind: unrecognized: exec\nBusyBox v1.25.1 (2016-10-26 16:15:20 GMT) multi-call binary.\n\nUsage: find [-HL] [PATH]... [OPTIONS] [ACTIONS]\n\nSearch for files and perform actions on them.\nFirst failed action stops processing of current file.\nDefaults: PATH is current directory, action is '-print'\n\n\t-L,-follow\tFollow symlinks\n\t-H\t\t...on command line only\n\t-xdev\t\tDon't descend directories on other filesystems\n\t-maxdepth N\tDescend at most N levels. -maxdepth 0 applies\n\t\t\tactions to command line arguments only\n\t-mindepth N\tDon't act on first N levels\n\t-depth\t\tAct on directory *after* traversing it\n\nActions:\n\t( ACTIONS )\tGroup actions for -o / -a\n\t! ACT\t\tInvert ACT's success/failure\n\tACT1 [-a] ACT2\tIf ACT1 fails, stop, else do ACT2\n\tACT1 -o ACT2\tIf ACT1 succeeds, stop, else do ACT2\n\t\t\tNote: -a has higher priority than -o\n\t-name PATTERN\tMatch file name (w/o directory name) to PATTERN\n\t-iname PATTERN\tCase insensitive -name\n\t-path PATTERN\tMatch path to PATTERN\n\t-ipath PATTERN\tCase insensitive -path\n\t-regex PATTERN\tMatch path to regex PATTERN\n\t-type X\t\tFile type is X (one of: f,d,l,b,c,...)\n\t-perm MASK\tAt least one mask bit (+MASK), all bits (-MASK),\n\t\t\tor exactly MASK bits are set in file's mode\n\t-mtime DAYS\tmtime is greater than (+N), less than (-N),\n\t\t\tor exactly N days in the past\n\t-mmin MINS\tmtime is greater than (+N), less than (-N),\n\t\t\tor exactly N minutes in the past\n\t-newer FILE\tmtime is more recent than FILE's\n\t-inum N\t\tFile has inode number N\n\t-user NAME/ID\tFile is owned by given user\n\t-group NAME/ID\tFile is owned by given group\n\t-size N[bck]\tFile size is N (c:bytes,k:kbytes,b:512 bytes(def.))\n\t\t\t+/-N: file size is bigger/smaller than N\n\t-links N\tNumber of links is greater than (+N), less than (-N),\n\t\t\tor exactly N\n\t-prune\t\tIf current file is directory, don't descend into it\nIf none of the following actions is specified, -print is assumed\n\t-print\t\tPrint file name\n\t-print0\t\tPrint file name, NUL terminated\n\t-exec CMD ARG ;\tRun CMD with all instances of {} replaced by\n\t\t\tfile name. Fails if CMD exits with nonzero\n\t-exec CMD ARG + Run CMD with {} replaced by list of file names\n\t-delete\t\tDelete current file/directory. Turns on -depth option\n","instructions":"\nLearning file-system navigation.","shunit2_help.txt":"\nshunit2 help is online at\nhttps://github.com/zandev/shunit2/blob/master/doc/shunit2.txt\nhttp://shunit2.googlecode.com/svn/trunk/source/2.1/doc/shunit2.html#function-reference\n\nSummary\n-------\ntest functions must start with test. \n\nassertEquals [message] expected actual\nassertNotEquals [message] expected actual\nassertSame [message] expected actual\nassertNotSame [message] unexpected actual\nassertNull [message] value\nassertNotNull [message] value\nassertTrue [message] condition\nassertFalse [message] condition\nfail [message]\n\noneTimeSetUp\n    called once before any tests are run\nsetUp\n    called once before each test is run\ntearDown\n    called once after each test is run\noneTimeTearDown\n    called once after all tests are run\n\n","test_file-system.sh":"#!/bin/bash\n\ntest_pwd_to_print_current_working_dir()\n{\n  local expected=\"/sandboxes/puffin\"\n  assertEquals ${expected} $(pwd)\n  assertEquals ${expected} ${PWD}  \n}\n\ntest_cd_to_change_directory()\n{\n  cd /etc\n  assertEquals \"/etc\" ${PWD}\n  cd - > /dev/null\n}\n\ntest_ls_to_list_contents_of_current_dir()\n{\n  local lsOutput=$(ls)\n  local first=$(echo $lsOutput | awk '{print $1}')\n  assertEquals \"cyber-dojo.sh\" $first\n}\n\ntest_ls_dir_to_list_contents_of_given_dir()\n{\n  local lsOutput=$(ls /etc)\n  local first=$(echo $lsOutput | awk '{print $1}')\n  assertEquals \"TZ\" $first  \n}\n\ntest_dot_means_the_current_dir()\n{\n  local lsOutput=$(ls .)\n  local first=$(echo $lsOutput | awk '{print $1}')\n  assertEquals \"cyber-dojo.sh\" $first  \n}\n\ntest_dot_dot_means_the_parent_dir()\n{\n  local lsOutput=$(ls ..)\n  local first=$(echo $lsOutput | awk '{print $1}')\n  assertEquals \"puffin\" $first  \n}\n\ntest_mkdir_makes_a_dir_and_rmdir_removes_an_empty_dir()\n{\n  assertFalse \"[ -d mydir ]\"\n  mkdir mydir\n  assertTrue  \"[ -d mydir ]\"\n  rmdir mydir\n  assertFalse \"[ -d mydir ]\"\n}\n\ntest_mkdir_p_makes_a_dir_and_intermediate_dirs()\n{\n  assertFalse \"[ -d my/dir/ect ]\"\n  mkdir my/dir/ect 2> /dev/null\n  assertNotEquals 0 $?\n  assertFalse \"[ -d my/dir/ect ]\"\n  \n  mkdir -p my/dir/ect\n  assertEquals 0 $?\n  assertTrue  \"[ -d my/dir/ect ]\"\n  rmdir my/dir/ect\n  rmdir my/dir\n  rmdir my\n  assertFalse \"[ -d my ]\"\n}\n\ntest_rm_removes_a_file()\n{\n  echo \"Hello\" > /tmp/hello.txt\n  assertTrue  \"[ -f /tmp/hello.txt ]\"\n  rm /tmp/hello.txt\n  assertEquals 0 $?\n  assertFalse \"[ -f /tmp/hello.txt ]\"\n}\n\ntest_rm_rf_recursively_forces_dir_removal() \n{\n  mkdir -p my/dir/ect\n  rm -rf my\n  assertEquals 0 $?\n  assertFalse \"[ -d my ]\"\n}\n\ntest_cp_copies_a_file()\n{\n  assertFalse \"[ -e /tmp/shunit2_help.txt ]\"\n  cp shunit2_help.txt /tmp\n  assertEquals 0 $?\n  assertTrue \"[ -e ./shunit2_help.txt ]\"\n  assertTrue \"[ -e /tmp/shunit2_help.txt ]\"\n  rm /tmp/shunit2_help.txt\n}\n\ntest_mv_moves_a_file()\n{\n  assertFalse \"[ -e /tmp/shunit2_help.txt ]\"\n  mv shunit2_help.txt /tmp\n  assertEquals 0 $?\n  assertFalse \"[ -e ./shunit2_help.txt ]\"\n  assertTrue  \"[ -e /tmp/shunit2_help.txt ]\"\n  rm /tmp/shunit2_help.txt\n}\n\ntest_finding_a_file_by_name()\n{\n  local d=$(find /etc -name \"*.d\")\n  local count=$(echo ${d} | wc | awk '{print $2}')\n  assertEquals \"14\" ${count}\n}\n\ntest_finding_a_file_by_content()\n{\n  local r=$(find /etc -type f exec grep \"puffin\" '{}' \\; -print)\n  echo $r\n}\n\n# load and run shUnit2\nsource shunit2\n"}