{"cyber-dojo.sh":"chmod +x *.sh\n./test_*.sh\nls -al /etc","output":"total 196\ndrwxr-xr-x   16 root     root          4096 Aug 16 02:31 .\ndrwxr-xr-x   35 root     root          4096 Aug 16 02:31 ..\n-rw-r--r--    1 root     root             4 Nov 25  2016 TZ\n-rw-r--r--    1 root     root             6 Mar  2 20:17 alpine-release\ndrwxr-xr-x    4 root     root          4096 Jul 23 12:01 apk\ndrwxr-xr-x    2 root     root          4096 Jun 25 17:52 conf.d\ndrwxr-xr-x    2 root     root          4096 Jun 25 17:52 crontabs\n-rw-r--r--    1 root     root            89 Nov 25  2016 fstab\n-rw-r--r--    1 root     root           722 Aug 16 02:31 group\n-rw-r--r--    1 root     root           716 Aug 16 02:31 group-\n-rw-r--r--    1 root     root            13 Aug 16 02:31 hostname\n-rw-r--r--    1 root     root           150 Aug 16 02:31 hosts\ndrwxr-xr-x    2 root     root          4096 Jun 25 17:52 init.d\n-rw-r--r--    1 root     root           570 Nov 25  2016 inittab\n-rw-r--r--    1 root     root            53 Mar  2 20:17 issue\n-rw-r--r--    1 root     root           118 Jun 25 17:52 localtime\ndrwxr-xr-x    2 root     root          4096 Jun 25 17:52 logrotate.d\ndrwxr-xr-x    2 root     root          4096 Jun 25 17:52 modprobe.d\n-rw-r--r--    1 root     root            10 Nov 25  2016 modules\ndrwxr-xr-x    2 root     root          4096 Jun 25 17:52 modules-load.d\n-rw-r--r--    1 root     root           282 Nov 25  2016 motd\nlrwxrwxrwx    1 root     root            12 Aug 16 02:31 mtab -> /proc/mounts\ndrwxr-xr-x    8 root     root          4096 Jun 25 17:52 network\ndrwxr-xr-x    2 root     root          4096 Jun 25 17:52 opt\n-rw-r--r--    1 root     root           158 Mar  2 20:17 os-release\n-rw-r--r--    1 root     root          1279 Aug 16 02:31 passwd\n-rw-r--r--    1 root     root          1224 Nov 25  2016 passwd-\ndrwxr-xr-x    7 root     root          4096 Jun 25 17:52 periodic\n-rw-r--r--    1 root     root           259 Nov 25  2016 profile\ndrwxr-xr-x    2 root     root          4096 Jun 25 17:52 profile.d\n-rw-r--r--    1 root     root          1865 Nov 25  2016 protocols\n-rw-r--r--    1 root     root           354 Aug 16 02:31 resolv.conf\n-rw-r--r--    1 root     root            65 Oct 26  2016 securetty\n-rw-r--r--    1 root     root         36141 Nov 25  2016 services\n-rw-r-----    1 root     shadow         468 Aug 16 02:31 shadow\n-rw-r-----    1 root     shadow         440 Nov 25  2016 shadow-\n-rw-r--r--    1 root     root            48 Jul 23 12:01 shells\n-rw-r--r--    1 root     root            53 Nov 25  2016 sysctl.conf\ndrwxr-xr-x    2 root     root          4096 Jun 25 17:52 sysctl.d\ndrwxr-xr-x    9 root     root          4096 Jul 23 12:01 terminfo\n-rw-r--r--    1 root     root          4138 Oct 26  2016 udhcpd.conf\n./test_file-system.sh: line 110: syntax error near unexpected token `}'\n./test_file-system.sh: line 110: `}'\n","instructions":"\nLearning file-system navigation.","shunit2_help.txt":"\nshunit2 help is online at\nhttps://github.com/zandev/shunit2/blob/master/doc/shunit2.txt\nhttp://shunit2.googlecode.com/svn/trunk/source/2.1/doc/shunit2.html#function-reference\n\nSummary\n-------\ntest functions must start with test. \n\nassertEquals [message] expected actual\nassertNotEquals [message] expected actual\nassertSame [message] expected actual\nassertNotSame [message] unexpected actual\nassertNull [message] value\nassertNotNull [message] value\nassertTrue [message] condition\nassertFalse [message] condition\nfail [message]\n\noneTimeSetUp\n    called once before any tests are run\nsetUp\n    called once before each test is run\ntearDown\n    called once after each test is run\noneTimeTearDown\n    called once after all tests are run\n\n","test_file-system.sh":"#!/bin/bash\n\ntest_pwd_to_print_current_working_dir()\n{\n  local expected=\"/sandboxes/puffin\"\n  assertEquals ${expected} $(pwd)\n  assertEquals ${expected} ${PWD}  \n}\n\ntest_cd_to_change_directory()\n{\n  cd /etc\n  assertEquals \"/etc\" ${PWD}\n  cd - > /dev/null\n}\n\ntest_ls_to_list_contents_of_current_dir()\n{\n  local lsOutput=$(ls)\n  local first=$(echo $lsOutput | awk '{print $1}')\n  assertEquals \"cyber-dojo.sh\" $first\n}\n\ntest_ls_dir_to_list_contents_of_given_dir()\n{\n  local lsOutput=$(ls /etc)\n  local first=$(echo $lsOutput | awk '{print $1}')\n  assertEquals \"TZ\" $first  \n}\n\ntest_dot_means_the_current_dir()\n{\n  local lsOutput=$(ls .)\n  local first=$(echo $lsOutput | awk '{print $1}')\n  assertEquals \"cyber-dojo.sh\" $first  \n}\n\ntest_dot_dot_means_the_parent_dir()\n{\n  local lsOutput=$(ls ..)\n  local first=$(echo $lsOutput | awk '{print $1}')\n  assertEquals \"puffin\" $first  \n}\n\ntest_mkdir_makes_a_dir_and_rmdir_removes_an_empty_dir()\n{\n  assertFalse \"[ -d mydir ]\"\n  mkdir mydir\n  assertTrue  \"[ -d mydir ]\"\n  rmdir mydir\n  assertFalse \"[ -d mydir ]\"\n}\n\ntest_mkdir_p_makes_a_dir_and_intermediate_dirs()\n{\n  assertFalse \"[ -d my/dir/ect ]\"\n  mkdir my/dir/ect 2> /dev/null\n  assertNotEquals 0 $?\n  assertFalse \"[ -d my/dir/ect ]\"\n  \n  mkdir -p my/dir/ect\n  assertEquals 0 $?\n  assertTrue  \"[ -d my/dir/ect ]\"\n  rmdir my/dir/ect\n  rmdir my/dir\n  rmdir my\n  assertFalse \"[ -d my ]\"\n}\n\ntest_rm_removes_a_file()\n{\n  echo \"Hello\" > /tmp/hello.txt\n  assertTrue  \"[ -f /tmp/hello.txt ]\"\n  rm /tmp/hello.txt\n  assertEquals 0 $?\n  assertFalse \"[ -f /tmp/hello.txt ]\"\n}\n\ntest_rm_rf_recursively_forces_dir_removal() \n{\n  mkdir -p my/dir/ect\n  rm -rf my\n  assertEquals 0 $?\n  assertFalse \"[ -d my ]\"\n}\n\ntest_cp_copies_a_file()\n{\n  assertFalse \"[ -e /tmp/shunit2_help.txt ]\"\n  cp shunit2_help.txt /tmp\n  assertEquals 0 $?\n  assertTrue \"[ -e ./shunit2_help.txt ]\"\n  assertTrue \"[ -e /tmp/shunit2_help.txt ]\"\n  rm /tmp/shunit2_help.txt\n}\n\ntest_mv_moves_a_file()\n{\n  assertFalse \"[ -e /tmp/shunit2_help.txt ]\"\n  mv shunit2_help.txt /tmp\n  assertEquals 0 $?\n  assertFalse \"[ -e ./shunit2_help.txt ]\"\n  assertTrue  \"[ -e /tmp/shunit2_help.txt ]\"\n  rm /tmp/shunit2_help.txt\n}\n\ntest_finding_a_file()\n{\n  \n}\n\n# load and run shUnit2\nsource shunit2\n"}