{"test_hiker.sh":"#!/bin/bash\n\n. ./hiker.sh\n\nfunction test_using_a_pipe_to_get_line_18_of_help_text_file()\n{\n  local expected=\"fail [message]\"\n  local actual=$(head -18 help.txt | tail -1)\n  assertEquals \"${expected}\" \"${actual}\"\n}\n\nfunction test_finding_the_name_of_the_largest_file_in_etc_dir()\n{\n  local expected=\"services\"\n  local actual=$(ls -l /etc | sort -k5rn | head -1 | awk '{print $9}')\n  assertEquals \"${expected}\" \"${actual}\"  \n}\n\nfunction test_list_only_subdirs()\n{\n  local expected=\"sdsd\"\n  local actual=$(ls -l /usr/local)\n  \n}\n\n# load and run shUnit2\n. shunit2\n","help.txt":"\nshunit2 help is online at\nhttps://github.com/zandev/shunit2/blob/master/doc/shunit2.txt\nhttp://shunit2.googlecode.com/svn/trunk/source/2.1/doc/shunit2.html#function-reference\n\nSummary\n-------\ntest functions must start with test. \n\nassertEquals [message] expected actual\nassertNotEquals [message] expected actual\nassertSame [message] expected actual\nassertNotSame [message] unexpected actual\nassertNull [message] value\nassertNotNull [message] value\nassertTrue [message] condition\nassertFalse [message] condition\nfail [message]\n\noneTimeSetUp\n    called once before any tests are run\nsetUp\n    called once before each test is run\ntearDown\n    called once after each test is run\noneTimeTearDown\n    called once after all tests are run\n\n","hiker.sh":"#!/bin/bash\n\nfunction answer()\n{\n  echo $[6 * 9]\n}\n","cyber-dojo.sh":"chmod +x *.sh\n./test_*.sh\n\n#ls --help\nls -l /","output":"test_using_a_pipe_to_get_line_18_of_help_text_file\ntest_finding_the_name_of_the_largest_file_in_etc_dir\ntest_list_only_subdirs\n\nRan 3 tests.\n\nOK\ntotal 56\ndrwxr-xr-x    2 root     root          4096 Jul 23 12:01 bin\ndrwxr-xr-x    5 root     root           340 Aug 14 08:44 dev\ndrwxr-xr-x   16 root     root          4096 Aug 14 08:44 etc\ndrwxr-xr-x    3 root     root          4096 Aug 14 08:44 home\ndrwxr-xr-x    6 root     root          4096 Jul 23 12:01 lib\ndrwxr-xr-x    5 root     root          4096 Jun 25 17:52 media\ndrwxr-xr-x    2 root     root          4096 Jun 25 17:52 mnt\ndr-xr-xr-x  154 root     root             0 Aug 14 08:44 proc\ndrwx------    2 root     root          4096 Jun 25 17:52 root\ndrwxr-xr-x    2 root     root          4096 Jun 25 17:52 run\ndrwxr-xr-x    3 root     root          4096 Aug 14 08:44 sandboxes\ndrwxr-xr-x    2 root     root          4096 Jun 25 17:52 sbin\ndrwxr-xr-x    2 root     root          4096 Jun 25 17:52 srv\ndr-xr-xr-x   13 root     root             0 Aug 14 08:44 sys\ndrwxrwxrwt    2 root     root          4096 Aug 14 08:44 tmp\ndrwxr-xr-x   11 root     root          4096 Jul 23 12:03 usr\ndrwxr-xr-x   14 root     root          4096 Jul 23 12:01 var\n","instructions":"\nThis is an instructor-led exercise.\nThere are no written instructions.\nYour instructor will explain the exercise.\n","sort.txt":"Usage: sort [-nrugMcszbdfiokt] [-o FILE] [-k start[.offset][opts][,end[.offset][opts]] [-t CHAR] [FILE]...\n\nSort lines of text\n\n\t-o FILE\tOutput to FILE\n\t-c\tCheck whether input is sorted\n\t-b\tIgnore leading blanks\n\t-f\tIgnore case\n\t-i\tIgnore unprintable characters\n\t-d\tDictionary order (blank or alphanumeric only)\n\t-g\tGeneral numerical sort\n\t-M\tSort month\n\t-n\tSort numbers\n\t-t CHAR\tField separator\n\t-k N[,M] Sort by Nth field\n\t-r\tReverse sort order\n\t-s\tStable (don't sort ties alphabetically)\n\t-u\tSuppress duplicate lines\n\t-z\tLines are terminated by NUL, not newline\n"}