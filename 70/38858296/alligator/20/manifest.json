{"test_hiker.sh":"#!/bin/bash\n\n. ./hiker.sh\n\nfunction test_using_a_pipe_to_get_line_18_of_help_text_file()\n{\n  local expected=\"fail [message]\"\n  local actual=$(head -18 help.txt | tail -1)\n  assertEquals \"${expected}\" \"${actual}\"\n}\n\nfunction test_finding_the_name_of_the_largest_file_in_etc_dir()\n{\n  local expected=\"services\"\n  local actual=$(ls -l /etc | sort -k5rn | head -1 | awk '{print $9}')\n  assertEquals \"${expected}\" \"${actual}\"  \n}\n\nfunction test_list_only_subdirs()\n{\n  :\n}\n\n# load and run shUnit2\n. shunit2\n","help.txt":"\nshunit2 help is online at\nhttps://github.com/zandev/shunit2/blob/master/doc/shunit2.txt\nhttp://shunit2.googlecode.com/svn/trunk/source/2.1/doc/shunit2.html#function-reference\n\nSummary\n-------\ntest functions must start with test. \n\nassertEquals [message] expected actual\nassertNotEquals [message] expected actual\nassertSame [message] expected actual\nassertNotSame [message] unexpected actual\nassertNull [message] value\nassertNotNull [message] value\nassertTrue [message] condition\nassertFalse [message] condition\nfail [message]\n\noneTimeSetUp\n    called once before any tests are run\nsetUp\n    called once before each test is run\ntearDown\n    called once after each test is run\noneTimeTearDown\n    called once after all tests are run\n\n","hiker.sh":"#!/bin/bash\n\nfunction answer()\n{\n  echo $[6 * 9]\n}\n","cyber-dojo.sh":"chmod +x *.sh\n./test_*.sh\n\nls --help","output":"test_using_a_pipe_to_get_line_18_of_help_text_file\ntest_finding_the_name_of_the_largest_file_in_etc_dir\ntest_list_only_subdirs\n\nRan 3 tests.\n\nOK\nBusyBox v1.25.1 (2016-10-26 16:15:20 GMT) multi-call binary.\n\nUsage: ls [-1AaCxdLHRFplinsehrSXvctu] [-w WIDTH] [FILE]...\n\nList directory contents\n\n\t-1\tOne column output\n\t-a\tInclude entries which start with .\n\t-A\tLike -a, but exclude . and ..\n\t-C\tList by columns\n\t-x\tList by lines\n\t-d\tList directory entries instead of contents\n\t-L\tFollow symlinks\n\t-H\tFollow symlinks on command line\n\t-R\tRecurse\n\t-p\tAppend / to dir entries\n\t-F\tAppend indicator (one of */=@|) to entries\n\t-l\tLong listing format\n\t-i\tList inode numbers\n\t-n\tList numeric UIDs and GIDs instead of names\n\t-s\tList allocated blocks\n\t-e\tList full date and time\n\t-h\tList sizes in human readable format (1K 243M 2G)\n\t-r\tSort in reverse order\n\t-S\tSort by size\n\t-X\tSort by extension\n\t-v\tSort by version\n\t-c\tWith -l: sort by ctime\n\t-t\tWith -l: sort by mtime\n\t-u\tWith -l: sort by atime\n\t-w N\tAssume the terminal is N columns wide\n\t--color[={always,never,auto}]\tControl coloring\n","instructions":"\nThis is an instructor-led exercise.\nThere are no written instructions.\nYour instructor will explain the exercise.\n","sort.txt":"Usage: sort [-nrugMcszbdfiokt] [-o FILE] [-k start[.offset][opts][,end[.offset][opts]] [-t CHAR] [FILE]...\n\nSort lines of text\n\n\t-o FILE\tOutput to FILE\n\t-c\tCheck whether input is sorted\n\t-b\tIgnore leading blanks\n\t-f\tIgnore case\n\t-i\tIgnore unprintable characters\n\t-d\tDictionary order (blank or alphanumeric only)\n\t-g\tGeneral numerical sort\n\t-M\tSort month\n\t-n\tSort numbers\n\t-t CHAR\tField separator\n\t-k N[,M] Sort by Nth field\n\t-r\tReverse sort order\n\t-s\tStable (don't sort ties alphabetically)\n\t-u\tSuppress duplicate lines\n\t-z\tLines are terminated by NUL, not newline\n"}