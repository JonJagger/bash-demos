{"shunit2_help.txt":"\nshunit2 help is online at\nhttps://github.com/zandev/shunit2/blob/master/doc/shunit2.txt\nhttp://shunit2.googlecode.com/svn/trunk/source/2.1/doc/shunit2.html#function-reference\n\nSummary\n-------\ntest functions must start with test. \n\nassertEquals [message] expected actual\nassertNotEquals [message] expected actual\nassertSame [message] expected actual\nassertNotSame [message] unexpected actual\nassertNull [message] value\nassertNotNull [message] value\nassertTrue [message] condition\nassertFalse [message] condition\nfail [message]\n\noneTimeSetUp\n    called once before any tests are run\nsetUp\n    called once before each test is run\ntearDown\n    called once after each test is run\noneTimeTearDown\n    called once after all tests are run\n\n","hiker.sh":"#!/bin/bash\n\nanswer()\n{\n  echo $((6 * 7))\n}\n","cyber-dojo.sh":"chmod +x *.sh\n./test_*.sh\n","output":"test_dollar_dollar_is_the_pid_of_the_current_process\ntest_trailing_ampersand_backgrounds_a_task\ntest_ps_is_for_showing_process_status\n\nRan 3 tests.\n\nOK\n","instructions":"\nLearning about tasks.","test_tasks.sh":"#!/bin/bash\n\nsource ./hiker.sh\n\ntest_dollar_dollar_is_the_pid_of_the_current_process()\n{\n  local pid=$$\n  local cmd_line=$(cat /proc/$pid/cmdline)\n  local expected=\"/bin/bash./test_tasks.sh\"\n  assertEquals $expected \"$cmd_line\"\n}\n\ntest_trailing_ampersand_backgrounds_a_task()\n{\n  sleep 12 &                   # sleep for 12 seconds in background task\n  local sleep_pid=$!           # $! is pid of the just backgrounded task\n  kill -n 9 $sleep_pid         # kill the sleep task\n  wait $sleep_pid 2>/dev/null  # wait for it to die\n  assertEquals \"137\" $?        # verify success\n}\n\ntest_ps_is_for_showing_process_status()\n{\n  local stdout=$(ps -a)\n  echo $stdout | grep -q \"cyber-dojo.sh\"\n  assertEquals 0 $?\n  echo $stdout | grep -q \"ps -a\"\n  assertEquals 0 $?  \n  #local cdsh=[[ \"$stdout\" =~ \"*cyber-dojo.sh*\" ]]\n  #echo \"~~~~~~\"\n  #echo $cdsh\n  #echo \"~~~~~~\"\n  #assertTrue \"$stdout contains CD\" \"[[ $stdout =~ *cyber-dojo.sh* ]]\"\n  #assertTrue \"$stdout contains PS\" \"[[ $stdout =~ *ps* ]]\"\n}\n\n# load and run shUnit2\nsource shunit2\n"}